{"name":"Kvs","tagline":"Erlang Data Framework with Sequential Consistency","body":"KVS: Data Framework for KV Stores\r\n=================================\r\n\r\nOverview\r\n--------\r\n\r\nThis is database handling application that hides database access\r\nand provides high-level rich API to stored and extend following data:\r\n\r\n* Acl\r\n* Users\r\n* Groups\r\n* Subscriptions\r\n* Feeds and Comments\r\n* Meetings\r\n* Accounts and Payments\r\n* Products and Purchases\r\n\r\nThis Framework provides also a Plugin for Feed Server for sequential consistency.\r\nAll write requests with given object keys will be handled by single processes\r\nin Feed Server so you may not worry about concurrent changes of user feeds.\r\n\r\nAll write operations that are made to data with secondary indexes,\r\ni.e. not like linked lists could be potentially handled without feed_server.\r\nBut some KV storages are not supporting secondary indexes add those backends carefully.\r\n\r\nStore Backends\r\n--------------\r\n\r\nCurrently kvs includes following store backends:\r\n\r\n* Mnesia\r\n* Riak\r\n* CouchDB\r\n\r\nCredits\r\n-------\r\n\r\n* Maxim Sokhatsky\r\n* Andrii Zadorozhnii\r\n* Alex Kalenuk\r\n* Sergey Polkovnikov\r\n\r\nOM A HUM\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}